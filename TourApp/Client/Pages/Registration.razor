@page "/Register"
@page "/Register/{UserID:int}"
@using TourApp.Shared;
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h3>Registration</h3>

@if (UserID is null)
{

	<PageTitle>Register a New User</PageTitle>
	<h3>Register</h3>
}
else
{
	<PageTitle>Edit @reg.FullName</PageTitle>
	<h3>Edit @reg.FullName</h3>
}

<EditForm Model="reg" OnSubmit="HandleSubmit">

	<div>
		<label for="FullName">FullName</label>
		<InputText id="FullName" @bind-Value="reg.FullName" class="form-control" />
	</div>
	<div>
		<label for="Passport">PassPort</label>
		<InputNumber id="PassPort" @bind-Value="reg.PassPort" class="form-control" />
	</div>
	<div>
		<label for="Phone">Phone</label>
		<InputNumber id="Phone" @bind-Value="reg.Phone" class="form-control" />
	</div><br />
	<button type="submit" class="btn btn-primary">Save</button>
	@if (UserID is not null)
	{
		<button tpye="button" class="btn btn-danger" @onclick="DeleteCustomer">Delete</button>
	}
</EditForm>

@code {
	[Parameter]
	public int? UserID { get; set; }
	Users reg = new Users { FullName = "New User" };

	protected override async Task OnParametersSetAsync()
	{
		if (UserID is not null)
		{
			var result = await Http.GetFromJsonAsync<Users>($"api/Register/{UserID}");
			if (result is not null)
			{
				reg = result;
			}
		}
	}



	async Task DeleteCustomer()
	{
		await Http.DeleteAsync($"api/Register/{UserID}");
	}
	async Task HandleSubmit()

	{
		if (UserID is null)
		{
			await Http.PostAsJsonAsync("api/Register", reg);
		}
		else
		{
			await Http.PutAsJsonAsync($"api/Register/{UserID}", reg);
		}
		NavigationManager.NavigateTo("/Register");
	}

}

